@model MVC_TODO.Models.TodoItems
@{
    ViewBag.Title = "Home Page";
    if (Model.Todos.Count() > 0)
    {
        // Insure ItemID is always max + 1 irrispective
        //of whether an item has been deleted
        var item = Model.Todos.OrderByDescending(i => i.TodoID).FirstOrDefault();
        Model.Item.TodoID = item.TodoID + 1;

    }
    else
    {
        Model.Item.TodoID = 1;
    }

    var noComplete = Model.Todos.Where(a => a.Complete).Count();
}



<div class="jumbotron">
    <h1>TO DO List</h1>
    <p class="lead">To Do List Example Application</p>

</div>

<div class="row col-md-10">
    <h2>Enter To Do Item:</h2>


    <div class="outerModelContainer">
        @using (Html.BeginForm("AddItem", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "myForm" }))
        {
            <p>
                @Html.HiddenFor(m => m.Item.TodoID)

                @Html.TextAreaFor(m => m.Item.Text, new { @class = "form-control mainInput", required = "required" })

                <input id="input1" class="btn btn-default submit" type="submit" value="Add Item" />
            </p>
            @Html.ValidationMessageFor(m => m.Item.Text, "", new { @class = "text-danger" })
        }
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <table class="table-striped tableboarder">

            @if (Model.Todos.Count > 0)
            {
                <thead>
                    <tr>
                        <th class="tableheaderspacing">Complete</th>
                        <th>Detail</th>
                        <th></th>
                    </tr>
                </thead>
            }

            @foreach (var item in Model.Todos)
            {
                <tr class="tablebgc">

                    <td>
                        @{
                            var isComplete = item.Complete.ToString();
                            var ischecked = "";
                            string isCompleteID = "complete" + item.TodoID.ToString();
                            string todoListItemID = "text" + item.TodoID.ToString();
                        }
                        @switch (isComplete)
                        {
                            case "True":
                                ischecked = "checked=\"checked\"";
                                break;
                            case "False":
                                ischecked = "";
                                break;
                        }

                        <input type="checkbox" class="checkbox" id="@isCompleteID" onclick="amendmodel(@item.TodoID)" @if (item.Complete) { @ischecked } />

                    </td>
                    @if (item.Complete)
                    {
                        <td id="@todoListItemID" class="decorate mainText">
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                    }
                    else
                    {
                        <td id="@todoListItemID" class="mainText">
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                    }

                    <td> <input id="button1" type="button" value="Delete" class="tablebuttonspacing" onclick="location.href='@Url.Action("RemoveItem", "Home", new {itemID = item.TodoID })'" /></td>
                </tr>
            }
        </table>
    </div>

</div>
<div class="row">
    <div class="col-md-12" id="messageBlock">
        @if ((Model.Todos.Count > 2) && (Model.Todos.Count() == noComplete))
        {
            <div class="msg" id="messageBlock">Well Done! All Your Tasks Are Complete</div>
        }
    </div>
</div>

@section Scripts {@Scripts.Render("~/bundles/jqueryval")}


